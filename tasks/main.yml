---
# tasks file for ansible-role-logstash

- include_vars: "{{ ansible_os_family }}.yml"

- include: "install-{{ ansible_os_family }}.yml"

- include: "configure-{{ ansible_os_family }}.yml"

- name: Register installed plugins
  command: "{{ logstash_home }}/bin/logstash-plugin list"
  register: logstash_plugins_list
  changed_when: False
  become: true
  become_user: "{{ logstash_user }}"

- name: Install plugins
  command: "{{ logstash_home }}/bin/logstash-plugin install {{ item }}"
  become: true
  become_user: "{{ logstash_user }}"
  with_items: "{{ logstash_plugins_to_install }}"
  when: not ( logstash_plugins_list.stdout | search(item) )

- name: Configure logstash/conf.d
  file:
    path: "{{ logstash_conf_dir }}"
    state: directory

- name: Create logstash.yml
  template:
    src: logstash.yml.j2
    dest: "{{ logstash_etc_dir }}/logstash.yml"
  register: register_logstash_yml
  notify: Reload logstash

- name: Create path.logs directory
  file:
    path: "{{ logstash_config.path.logs }}"
    state: directory
    owner: "{{ logstash_user }}"
    group: "{{ logstash_group }}"
  when:
    - "'path.log' in logstash_config"

- name: Create path.data directory
  file:
    path: "{{ logstash_config.path.data }}"
    state: directory
    owner: "{{ logstash_user }}"
    group: "{{ logstash_group }}"
  when:
    - "'path.data' in logstash_config"

- name: Create logstash configuration files
  template:
    src: "{{ item }}.j2"
    dest: "{{ logstash_conf_dir }}/{{ item }}"
    mode: 0644
  register: register_config_files
  with_items:
    - input.conf
    - filter.conf
    - output.conf
  notify: Reload logstash

- set_fact:
    logstash_config_merged: "{{ logstash_config_default | combine(logstash_config) }}"

- name: Validate configuration files
  command: "{{ logstash_home }}/bin/logstash --config.test_and_exit --path.settings {{ logstash_etc_dir }} --path.config {{ logstash_config_merged['path.config'] }}"
  # XXX the error message does not show up in stderr when logging to file is
  # enabled, which is almost always true. you have to dig in to the log file to
  # see what the error was.
  when:
    - register_logstash_yml.changed or register_config_files.changed

- name: Ensure logstash is running
  service:
    name: "{{ logstash_service_name }}"
    state: started
    enabled: yes

- name: Wait for logstash to start listening to API requests
  wait_for:
    host: "{{ logstash_api_host }}"
    port: "{{ logstash_api_port }}"
  when: logstash_api_enabled

# TODO
# * --allow-unsafe-shutdown
# * install visualvm? https://www.elastic.co/guide/en/logstash/current/pipeline.html
# * logstash 2.3 (auto-reload)
# * reload by sending SIGHUP
# * Managing Throughput Spikes with Message Queueing
# * Managing plugins
